/// <reference types="node" />
import { AttachmentOptions, ContentType, Label, Link, MetadataMessage, ParameterOptions } from "allure-js-commons";
export declare class allure {
    static logStep(name: string): Promise<void>;
    static step<T>(name: string, body: () => Promise<T>): Promise<T>;
    static attachment(name: string, content: Buffer | string, options: ContentType | string | Pick<AttachmentOptions, "contentType">): Promise<void>;
    static addMetadataAttachment(metadata: MetadataMessage): Promise<void>;
    static label(label: string, value: string): Promise<void>;
    static labels(...values: Label[]): void;
    static description(value: string): Promise<void>;
    static link(url: string, name?: string, type?: string): Promise<void>;
    static links(...values: Link[]): void;
    static id(id: string): Promise<void>;
    static epic(epic: string): Promise<void>;
    static feature(epic: string): Promise<void>;
    static story(story: string): Promise<void>;
    static suite(name: string): Promise<void>;
    static parentSuite(name: string): Promise<void>;
    static layer(layerName: string): Promise<void>;
    static subSuite(name: string): Promise<void>;
    static owner(owner: string): Promise<void>;
    static severity(severity: string): Promise<void>;
    static tag(tag: string): Promise<void>;
    static tags(...values: string[]): Promise<void>;
    static issue(name: string, url: string): Promise<void>;
    static tms(name: string, url: string): Promise<void>;
    static parameter(name: string, value: any, options?: ParameterOptions): Promise<void>;
    static addParameter(name: string, value: string, options?: ParameterOptions): Promise<void>;
}
export { LabelName } from "allure-js-commons";
